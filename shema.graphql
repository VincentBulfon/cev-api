### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CancellationsListRelationFilter {
  every: CancellationsWhereInput
  none: CancellationsWhereInput
  some: CancellationsWhereInput
}

input CancellationsWhereInput {
  AND: [CancellationsWhereInput!]
  NOT: [CancellationsWhereInput!]
  OR: [CancellationsWhereInput!]
  course: CoursesWhereInput
  course_id: IntFilter
  created_at: DateTimeFilter
  date: DateTimeFilter
  deleted_at: DateTimeNullableFilter
  id: IntFilter
}

input ChildrenListRelationFilter {
  every: ChildrenWhereInput
  none: ChildrenWhereInput
  some: ChildrenWhereInput
}

input ChildrenWhereInput {
  AND: [ChildrenWhereInput!]
  NOT: [ChildrenWhereInput!]
  OR: [ChildrenWhereInput!]
  birth_date: DateTimeFilter
  courses: CoursesListRelationFilter
  first_name: StringFilter
  id: IntFilter
  name: StringFilter
  tutor: UsersWhereInput
  tutor_id: IntFilter
}

input CoursesListRelationFilter {
  every: CoursesWhereInput
  none: CoursesWhereInput
  some: CoursesWhereInput
}

input CoursesWhereInput {
  AND: [CoursesWhereInput!]
  NOT: [CoursesWhereInput!]
  OR: [CoursesWhereInput!]
  cancellations: CancellationsListRelationFilter
  children: ChildrenListRelationFilter
  day_of_week: IntFilter
  end_time: DateTimeFilter
  id: IntFilter
  places: IntFilter
  start_time: DateTimeFilter
}

"""Date custom scalar type"""
scalar Date

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumRoleEnumFilter {
  equals: RoleEnum
  in: [RoleEnum!]
  not: NestedEnumRoleEnumFilter
  notIn: [RoleEnum!]
}

input EnumStatusEnumFilter {
  equals: StatusEnum
  in: [StatusEnum!]
  not: NestedEnumStatusEnumFilter
  notIn: [StatusEnum!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumRoleEnumFilter {
  equals: RoleEnum
  in: [RoleEnum!]
  not: NestedEnumRoleEnumFilter
  notIn: [RoleEnum!]
}

input NestedEnumStatusEnumFilter {
  equals: StatusEnum
  in: [StatusEnum!]
  not: NestedEnumStatusEnumFilter
  notIn: [StatusEnum!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input OptionsWhereInput {
  AND: [OptionsWhereInput!]
  NOT: [OptionsWhereInput!]
  OR: [OptionsWhereInput!]
  Prices: PricesListRelationFilter
  created_at: DateTimeFilter
  id: IntFilter
  name: StringFilter
  orders: Options_setListRelationFilter
}

input Options_setListRelationFilter {
  every: Options_setWhereInput
  none: Options_setWhereInput
  some: Options_setWhereInput
}

input Options_setWhereInput {
  AND: [Options_setWhereInput!]
  NOT: [Options_setWhereInput!]
  OR: [Options_setWhereInput!]
  cancelled_at: DateTimeNullableFilter
  id: IntFilter
  option: OptionsWhereInput
  options_id: IntFilter
  order: OrdersWhereInput
  orders_id: IntFilter
  paid_at: DateTimeNullableFilter
  price: PricesWhereInput
  prices_id: IntFilter
  status: EnumStatusEnumFilter
}

input OrdersListRelationFilter {
  every: OrdersWhereInput
  none: OrdersWhereInput
  some: OrdersWhereInput
}

input OrdersWhereInput {
  AND: [OrdersWhereInput!]
  NOT: [OrdersWhereInput!]
  OR: [OrdersWhereInput!]
  cancelled_at: DateTimeNullableFilter
  created_at: DateTimeFilter
  id: IntFilter
  options_set: Options_setListRelationFilter
  users: UsersWhereInput
  users_id: IntFilter
}

input PricesListRelationFilter {
  every: PricesWhereInput
  none: PricesWhereInput
  some: PricesWhereInput
}

input PricesWhereInput {
  AND: [PricesWhereInput!]
  NOT: [PricesWhereInput!]
  OR: [PricesWhereInput!]
  created_at: DateTimeFilter
  id: IntFilter
  option: OptionsWhereInput
  options_id: IntFilter
  options_set: Options_setListRelationFilter
  price: IntFilter
}

type Query {
  users(after: UsersWhereUniqueInput, before: UsersWhereUniqueInput, first: Int, last: Int, orderBy: [UsersOrderByInput!], where: UsersWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum RoleEnum {
  ADMIN
  MONITOR
  USER
}

enum SortOrder {
  asc
  desc
}

enum StatusEnum {
  NOTAPPLICABLE
  NOTYETPAYABLE
  PAID
  UNPAID
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  created_at: Date
  email: String
  first_name: String
  id: Int
  name: String
  password: String
  phone_number: String
  secondary_email: String
  vertified_at: Date
}

input UsersOrderByInput {
  created_at: SortOrder
  deleted_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  phone_number: SortOrder
  role: SortOrder
  secondary_email: SortOrder
  verfifed_at: SortOrder
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  children: ChildrenListRelationFilter
  created_at: DateTimeFilter
  deleted_at: DateTimeNullableFilter
  email: StringFilter
  first_name: StringFilter
  id: IntFilter
  name: StringFilter
  orders: OrdersListRelationFilter
  password: StringFilter
  phone_number: StringFilter
  role: EnumRoleEnumFilter
  secondary_email: StringNullableFilter
  verfifed_at: DateTimeNullableFilter
}

input UsersWhereUniqueInput {
  email: String
  id: Int
}
